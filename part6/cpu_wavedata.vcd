$date
	Wed Jun 28 10:17:24 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu_tb $end
$var wire 32 ! PC [31:0] $end
$var wire 32 " INSTRUCTION [31:0] $end
$var reg 1 # CLK $end
$var reg 1 $ RESET $end
$scope module mycpu $end
$var wire 1 # CLK $end
$var wire 32 % INSTRUCTION [31:0] $end
$var wire 1 $ RESET $end
$var wire 1 & writeSourceSelect $end
$var wire 1 ' writeSelect $end
$var wire 1 ( writeEn $end
$var wire 1 ) sourceSelect $end
$var wire 1 * signSelect $end
$var wire 8 + regout2 [7:0] $end
$var wire 8 , regout1 [7:0] $end
$var wire 8 - regin [7:0] $end
$var wire 1 . readSelect $end
$var wire 1 / neqSelect $end
$var wire 8 0 negOut [7:0] $end
$var wire 8 1 muxSourceOut [7:0] $end
$var wire 8 2 muxNegOut [7:0] $end
$var wire 32 3 jumpedPC [31:0] $end
$var wire 1 4 jumpSelect $end
$var wire 32 5 finalPC [31:0] $end
$var wire 32 6 extendedValue [31:0] $end
$var wire 1 7 eqSelect $end
$var wire 8 8 dmout [7:0] $end
$var wire 1 9 busyWait $end
$var wire 1 : Zero $end
$var wire 32 ; PCout [31:0] $end
$var wire 8 < ALUres [7:0] $end
$var wire 3 = ALUopcode [2:0] $end
$var reg 32 > PC [31:0] $end
$scope module badder $end
$var wire 32 ? offset [31:0] $end
$var wire 32 @ finalPC [31:0] $end
$var wire 32 A currPC [31:0] $end
$upscope $end
$scope module control $end
$var wire 8 B opcode [7:0] $end
$var reg 3 C ALUOP [2:0] $end
$var reg 1 7 eqSelect $end
$var reg 1 4 jumpSelect $end
$var reg 1 / neqSelect $end
$var reg 1 . readSelect $end
$var reg 1 * signSelect $end
$var reg 1 ) sourceSelect $end
$var reg 1 ( writeEn $end
$var reg 1 ' writeSelect $end
$var reg 1 & writeSourceSelect $end
$upscope $end
$scope module dmem $end
$var wire 1 # clock $end
$var wire 1 . read $end
$var wire 1 $ reset $end
$var wire 1 ' write $end
$var wire 8 D writedata [7:0] $end
$var wire 8 E address [7:0] $end
$var reg 1 9 busywait $end
$var reg 1 F readaccess $end
$var reg 8 G readdata [7:0] $end
$var reg 1 H writeaccess $end
$var integer 32 I i [31:0] $end
$upscope $end
$scope module jump $end
$var wire 1 7 eqSelect $end
$var wire 32 J input2 [31:0] $end
$var wire 1 4 jumpSelect $end
$var wire 1 / neqselect $end
$var wire 32 K input1 [31:0] $end
$var wire 1 : Zero $end
$var reg 32 L result [31:0] $end
$upscope $end
$scope module muxNeg $end
$var wire 1 * select $end
$var wire 8 M input2 [7:0] $end
$var wire 8 N input1 [7:0] $end
$var reg 8 O result [7:0] $end
$upscope $end
$scope module muxSrc $end
$var wire 8 P input1 [7:0] $end
$var wire 8 Q input2 [7:0] $end
$var wire 1 ) select $end
$var reg 8 R result [7:0] $end
$upscope $end
$scope module myalu $end
$var wire 8 S DATA2 [7:0] $end
$var wire 3 T SELECT [2:0] $end
$var wire 8 U wire5 [7:0] $end
$var wire 8 V wire4 [7:0] $end
$var wire 8 W wire3 [7:0] $end
$var wire 8 X wire2 [7:0] $end
$var wire 8 Y wire1 [7:0] $end
$var wire 8 Z DATA1 [7:0] $end
$var reg 8 [ RESULT [7:0] $end
$var reg 1 : ZERO $end
$scope module add1 $end
$var wire 8 \ DATA2 [7:0] $end
$var wire 8 ] DATA1 [7:0] $end
$var reg 8 ^ RESULT [7:0] $end
$upscope $end
$scope module and1 $end
$var wire 8 _ DATA2 [7:0] $end
$var wire 8 ` DATA1 [7:0] $end
$var reg 8 a RESULT [7:0] $end
$upscope $end
$scope module forward1 $end
$var wire 8 b DATA2 [7:0] $end
$var wire 8 c DATA1 [7:0] $end
$var reg 8 d RESULT [7:0] $end
$upscope $end
$scope module or1 $end
$var wire 8 e DATA2 [7:0] $end
$var wire 8 f DATA1 [7:0] $end
$var reg 8 g RESULT [7:0] $end
$upscope $end
$scope module shift $end
$var wire 8 h im [7:0] $end
$var wire 8 i rshiftA [7:0] $end
$var wire 8 j rshift [7:0] $end
$var wire 8 k rrotate [7:0] $end
$var wire 8 l lshiftA [7:0] $end
$var wire 8 m lshift [7:0] $end
$var wire 8 n lrotate [7:0] $end
$var wire 8 o in [7:0] $end
$var reg 8 p out [7:0] $end
$scope module lr $end
$var wire 8 q out [7:0] $end
$var wire 3 r shift [2:0] $end
$var wire 8 s in [7:0] $end
$var reg 8 t result [7:0] $end
$upscope $end
$scope module ls $end
$var wire 8 u out [7:0] $end
$var wire 3 v shift [2:0] $end
$var wire 8 w in [7:0] $end
$var reg 8 x result [7:0] $end
$upscope $end
$scope module lsa $end
$var wire 8 y out [7:0] $end
$var wire 3 z shift [2:0] $end
$var wire 8 { in [7:0] $end
$var reg 8 | result [7:0] $end
$upscope $end
$scope module rr $end
$var wire 8 } out [7:0] $end
$var wire 3 ~ shift [2:0] $end
$var wire 8 !" in [7:0] $end
$var reg 8 "" result [7:0] $end
$upscope $end
$scope module rs $end
$var wire 8 #" out [7:0] $end
$var wire 3 $" shift [2:0] $end
$var wire 8 %" in [7:0] $end
$var reg 8 &" result [7:0] $end
$upscope $end
$scope module rsa $end
$var wire 8 '" out [7:0] $end
$var wire 3 (" shift [2:0] $end
$var wire 8 )" in [7:0] $end
$var reg 8 *" result [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module neg $end
$var wire 8 +" Output [7:0] $end
$var wire 8 ," Input [7:0] $end
$upscope $end
$scope module pcadd $end
$var wire 32 -" PC [31:0] $end
$var wire 32 ." PCplus4 [31:0] $end
$upscope $end
$scope module reginSrc $end
$var wire 8 /" input1 [7:0] $end
$var wire 8 0" input2 [7:0] $end
$var wire 1 & select $end
$var reg 8 1" result [7:0] $end
$upscope $end
$scope module register $end
$var wire 1 # CLK $end
$var wire 8 2" IN [7:0] $end
$var wire 3 3" INADDRESS [2:0] $end
$var wire 8 4" OUT1 [7:0] $end
$var wire 3 5" OUT1ADDRESS [2:0] $end
$var wire 8 6" OUT2 [7:0] $end
$var wire 3 7" OUT2ADDRESS [2:0] $end
$var wire 1 $ RESET $end
$var wire 1 ( WRITE $end
$var integer 32 8" i [31:0] $end
$upscope $end
$scope module signext $end
$var wire 8 9" short [7:0] $end
$var wire 32 :" long [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx00 :"
bx 9"
bx 8"
bx 7"
bx 6"
bx 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
bx '"
bx &"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
bx v
bx u
bx t
bx s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
b100000000 I
0H
bx G
0F
bx E
bx D
bx C
bx B
bx A
bx @
bx00 ?
bx >
bx =
bx <
bx ;
x:
09
bx 8
x7
bx00 6
bx 5
x4
bx 3
bx 2
bx 1
bx 0
x/
x.
bx -
bx ,
bx +
x*
x)
x(
x'
x&
bx %
1$
0#
bx "
bx !
$end
#4
b1000 8"
1#
#5
b100 5
b100 L
b100 ;
b100 A
b100 K
b100 ."
b0 !
b0 >
b0 -"
0$
#7
b100 3
b100 @
b100 J
b0 6
b0 ?
b0 :"
b0 B
b0 3"
b0 5"
b1 7"
b1001 Q
b0 9"
b1001 "
b1001 %
#8
bx0 x
b0xxxxxxx &"
bx0 |
bx0xxxxxx *"
b1 v
b1 $"
b1 z
b1 ("
b1 r
b1 ~
b1001 1
b1001 R
b1001 S
b1001 \
b1001 _
b1001 b
b1001 e
b1001 h
0&
0.
0'
0/
07
04
1(
1)
0*
b0 =
b0 C
b0 T
0#
#9
b1001 -
b1001 1"
b1001 2"
b0 t
b0 x
b0 |
b0 ""
b0 &"
b0 *"
b0 2
b0 O
b0 P
b1001 V
b1001 g
b0 W
b0 a
b1001 <
b1001 E
b1001 [
b1001 /"
b1001 Y
b1001 d
b0 ,
b0 D
b0 Z
b0 ]
b0 `
b0 c
b0 f
b0 o
b0 s
b0 w
b0 {
b0 !"
b0 %"
b0 )"
b0 4"
b0 +
b0 N
b0 ,"
b0 6"
#10
0:
b0 0
b0 M
b0 +"
b1001 X
b1001 ^
#12
b0 n
b0 q
b0 U
b0 p
b0 m
b0 u
b0 l
b0 y
b0 k
b0 }
b0 j
b0 #"
b0 i
b0 '"
1#
#13
b1000 5
b1000 L
b1000 3
b1000 @
b1000 J
b1000 ;
b1000 A
b1000 K
b1000 ."
b100 !
b100 >
b100 -"
#15
b1 1
b1 R
b1 S
b1 \
b1 _
b1 b
b1 e
b1 h
b1100 3
b1100 @
b1100 J
b100 6
b100 ?
b100 :"
b10010 t
b10010 x
b10010 |
b10000100 ""
b100 &"
b100 *"
b1 3"
b1 Q
b1 9"
b1001 ,
b1001 D
b1001 Z
b1001 ]
b1001 `
b1001 c
b1001 f
b1001 o
b1001 s
b1001 w
b1001 {
b1001 !"
b1001 %"
b1001 )"
b1001 4"
b10000000000000001 "
b10000000000000001 %
#16
b1 -
b1 1"
b1 2"
b1 <
b1 E
b1 [
b1 /"
b1 Y
b1 d
b1 W
b1 a
0#
#17
b1010 X
b1010 ^
#18
b10010 n
b10010 q
b10010 U
b10010 p
b10010 m
b10010 u
b10010 l
b10010 y
b10000100 k
b10000100 }
b100 j
b100 #"
b100 i
b100 '"
#20
1#
#21
b1100 5
b1100 L
b10000 3
b10000 @
b10000 J
b1100 ;
b1100 A
b1100 K
b1100 ."
b1000 !
b1000 >
b1000 -"
#23
b1100 3
b1100 @
b1100 J
b0 6
b0 ?
b0 :"
b1010 B
b0 3"
b0 9"
b1 2
b1 O
b1 P
b1010000000000000000000000001 "
b1010000000000000000000000001 %
b1 +
b1 N
b1 ,"
b1 6"
#24
1H
19
1'
0(
0)
b11111111 0
b11111111 M
b11111111 +"
0#
#28
1#
#32
0#
#36
1#
#40
0#
#44
1#
#48
0#
#52
1#
#56
0#
#60
1#
#64
0#
#68
1#
0H
09
#69
b10000 5
b10000 L
b10000 3
b10000 @
b10000 J
b10000 ;
b10000 A
b10000 K
b10000 ."
b1100 !
b1100 >
b1100 -"
#71
b1011 B
b1 5"
b0 7"
b0 Q
b1011000000000000000100000000 "
b1011000000000000000100000000 %
#72
b1001 x
b1001 &"
b1001 |
b1001 *"
b1001 t
b1001 ""
b0 v
b0 $"
b0 z
b0 ("
b0 r
b0 ~
b0 1
b0 R
b0 S
b0 \
b0 _
b0 b
b0 e
b0 h
1)
0#
#73
b0 -
b0 1"
b0 2"
b1 t
b1 x
b1 |
b1 ""
b1 &"
b1 *"
b1001 2
b1001 O
b1001 P
b1 V
b1 g
b0 W
b0 a
b0 <
b0 E
b0 [
b0 /"
b0 Y
b0 d
b1 ,
b1 D
b1 Z
b1 ]
b1 `
b1 c
b1 f
b1 o
b1 s
b1 w
b1 {
b1 !"
b1 %"
b1 )"
b1 4"
b1001 +
b1001 N
b1001 ,"
b1001 6"
#74
b11110111 0
b11110111 M
b11110111 +"
b1 X
b1 ^
#76
b1 n
b1 q
b1 U
b1 p
b1 m
b1 u
b1 l
b1 y
b1 k
b1 }
b1 j
b1 #"
b1 i
b1 '"
1#
#77
b10100 5
b10100 L
b10100 3
b10100 @
b10100 J
b10100 ;
b10100 A
b10100 K
b10100 ."
b10000 !
b10000 >
b10000 -"
#79
b10 x
b0 &"
b10 |
b0 *"
b10 t
b10000000 ""
b1 v
b1 $"
b1 z
b1 ("
b1 r
b1 ~
b1 1
b1 R
b1 S
b1 \
b1 _
b1 b
b1 e
b1 h
b11100 3
b11100 @
b11100 J
b1000 6
b1000 ?
b1000 :"
b1000 B
b10 3"
b0 5"
b1 7"
b1 Q
b10 9"
b1000000000100000000000000001 "
b1000000000100000000000000001 %
#80
bx -
bx 1"
bx 2"
1F
19
b1001 1
b1001 R
b1001 S
b1001 \
b1001 _
b1001 b
b1001 e
b1001 h
b1 <
b1 E
b1 [
b1 /"
b1 Y
b1 d
b1 W
b1 a
1&
1.
0'
1(
0)
0#
#81
b1 1
b1 R
b1 S
b1 \
b1 _
b1 b
b1 e
b1 h
b10010 t
b10010 x
b10010 |
b10000100 ""
b100 &"
b100 *"
b1 2
b1 O
b1 P
b1001 V
b1001 g
b1001 W
b1001 a
b1001 <
b1001 E
b1001 [
b1001 /"
b1001 Y
b1001 d
b10010 X
b10010 ^
b1001 ,
b1001 D
b1001 Z
b1001 ]
b1001 `
b1001 c
b1001 f
b1001 o
b1001 s
b1001 w
b1001 {
b1001 !"
b1001 %"
b1001 )"
b1001 4"
b1 +
b1 N
b1 ,"
b1 6"
#82
b1 <
b1 E
b1 [
b1 /"
b1 Y
b1 d
b1 W
b1 a
b11111111 0
b11111111 M
b11111111 +"
#83
b1010 X
b1010 ^
#84
b10010 n
b10010 q
b10010 U
b10010 p
b10010 m
b10010 u
b10010 l
b10010 y
b10000100 k
b10000100 }
b100 j
b100 #"
b100 i
b100 '"
1#
#88
0#
#92
1#
#96
0#
#100
1#
#104
0#
#108
1#
#112
0#
#116
1#
#120
0#
#124
b1001 -
b1001 1"
b1001 2"
1#
0F
09
b1001 8
b1001 G
b1001 0"
#125
b11000 5
b11000 L
b100000 3
b100000 @
b100000 J
b11000 ;
b11000 A
b11000 K
b11000 ."
b10100 !
b10100 >
b10100 -"
#127
b100100 3
b100100 @
b100100 J
b1100 6
b1100 ?
b1100 :"
b11 3"
b11 9"
b1000000000110000000000000001 "
b1000000000110000000000000001 %
#128
0#
#132
1#
#133
b11100 5
b11100 L
b101000 3
b101000 @
b101000 J
b11100 ;
b11100 A
b11100 K
b11100 ."
b11000 !
b11000 >
b11000 -"
#135
b101100 3
b101100 @
b101100 J
b10000 6
b10000 ?
b10000 :"
b11 B
b100 3"
b100 9"
b11000001000000000000000001 "
b11000001000000000000000001 %
#136
b10000000 x
b0 &"
b0 |
b0 *"
b10000100 t
b10010 ""
b11111111 U
b11111111 p
b111 v
b111 $"
b111 z
b111 ("
b111 r
b111 ~
b11111111 1
b11111111 R
b11111111 S
b11111111 \
b11111111 _
b11111111 b
b11111111 e
b11111111 h
b1010 -
b1010 1"
b1010 2"
b11111111 2
b11111111 O
b11111111 P
b1010 <
b1010 E
b1010 [
b1010 /"
0&
0.
1*
b1 =
b1 C
b1 T
0#
#137
b11111111 V
b11111111 g
b1001 W
b1001 a
b11111111 Y
b11111111 d
#138
b1000 -
b1000 1"
b1000 2"
b1000 <
b1000 E
b1000 [
b1000 /"
b1000 X
b1000 ^
#139
b10000000 m
b10000000 u
b0 j
b0 #"
b0 l
b0 y
b0 i
b0 '"
b10000100 n
b10000100 q
b10010 k
b10010 }
#140
1#
#141
b100000 5
b100000 L
b110000 3
b110000 @
b110000 J
b100000 ;
b100000 A
b100000 K
b100000 ."
b11100 !
b11100 >
b11100 -"
#143
b100000 3
b100000 @
b100000 J
b0 6
b0 ?
b0 :"
b1011 B
b0 3"
b100 5"
b111 7"
b111 Q
b0 9"
b1011000000000000010000000111 "
b1011000000000000010000000111 %
#144
b11111111 -
b11111111 1"
b11111111 2"
1H
19
b10000000 U
b10000000 p
b111 1
b111 R
b111 S
b111 \
b111 _
b111 b
b111 e
b111 h
b1 2
b1 O
b1 P
b11111111 <
b11111111 E
b11111111 [
b11111111 /"
1'
0(
1)
0*
b0 =
b0 C
b0 T
0#
#145
b111 -
b111 1"
b111 2"
b100 t
b0 x
b10000 ""
b0 2
b0 O
b0 P
b111 <
b111 E
b111 [
b111 /"
b111 Y
b111 d
b0 W
b0 a
b1111 V
b1111 g
b1000 ,
b1000 D
b1000 Z
b1000 ]
b1000 `
b1000 c
b1000 f
b1000 o
b1000 s
b1000 w
b1000 {
b1000 !"
b1000 %"
b1000 )"
b1000 4"
b0 +
b0 N
b0 ,"
b0 6"
#146
b0 0
b0 M
b0 +"
b1111 X
b1111 ^
#148
b100 n
b100 q
b0 U
b0 p
b0 m
b0 u
b10000 k
b10000 }
1#
#152
0#
#156
1#
#160
0#
#164
1#
#168
0#
#172
1#
#176
0#
#180
1#
#184
0#
#188
1#
0H
09
#189
b100100 5
b100100 L
b100100 3
b100100 @
b100100 J
b100100 ;
b100100 A
b100100 K
b100100 ."
b100000 !
b100000 >
b100000 -"
#191
b111000 3
b111000 @
b111000 J
b10100 6
b10100 ?
b10100 :"
b1001 B
b101 3"
b0 5"
b101 9"
b1001000001010000000000000111 "
b1001000001010000000000000111 %
#192
b1001 -
b1001 1"
b1001 2"
1F
19
1&
1.
0'
1(
0#
#193
b10000100 t
b10000000 x
b10010 ""
b1001 ,
b1001 D
b1001 Z
b1001 ]
b1001 `
b1001 c
b1001 f
b1001 o
b1001 s
b1001 w
b1001 {
b1001 !"
b1001 %"
b1001 )"
b1001 4"
#194
b1 W
b1 a
#195
b10000 X
b10000 ^
#196
b10000100 n
b10000100 q
b10000000 U
b10000000 p
b10000000 m
b10000000 u
b10010 k
b10010 }
1#
#200
0#
#204
1#
#208
0#
#212
1#
#216
0#
#220
1#
#224
0#
#228
1#
#232
0#
#236
b1000 -
b1000 1"
b1000 2"
1#
0F
09
b1000 8
b1000 G
b1000 0"
#237
b101000 5
b101000 L
b111100 3
b111100 @
b111100 J
b101000 ;
b101000 A
b101000 K
b101000 ."
b100100 !
b100100 >
b100100 -"
#239
b1001 x
b1001 &"
b1001 |
b1001 *"
b1001 t
b1001 ""
b0 U
b0 p
b0 v
b0 $"
b0 z
b0 ("
b0 r
b0 ~
b100000 1
b100000 R
b100000 S
b100000 \
b100000 _
b100000 b
b100000 e
b100000 h
b1000000 3
b1000000 @
b1000000 J
b11000 6
b11000 ?
b11000 :"
b110 3"
b0 7"
b100000 Q
b110 9"
b1001000001100000000000100000 "
b1001000001100000000000100000 %
#240
b100000 <
b100000 E
b100000 [
b100000 /"
b100000 Y
b100000 d
b0 W
b0 a
b101001 V
b101001 g
0#
#241
b1001 2
b1001 O
b1001 P
b101001 X
b101001 ^
b1001 +
b1001 N
b1001 ,"
b1001 6"
#242
b11110111 0
b11110111 M
b11110111 +"
b1001 m
b1001 u
b1001 U
b1001 p
b1001 j
b1001 #"
b1001 l
b1001 y
b1001 i
b1001 '"
b1001 n
b1001 q
b1001 k
b1001 }
#244
1#
#245
b101100 5
b101100 L
b1000100 3
b1000100 @
b1000100 J
b101100 ;
b101100 A
b101100 K
b101100 ."
b101000 !
b101000 >
b101000 -"
#247
b101100 3
b101100 @
b101100 J
b0 6
b0 ?
b0 :"
b1011 B
b0 3"
b100 5"
b0 9"
b1011000000000000010000100000 "
b1011000000000000010000100000 %
#248
b100000 -
b100000 1"
b100000 2"
1H
19
0&
0.
1'
0(
0#
#249
b1000 t
b1000 x
b1000 |
b1000 ""
b1000 &"
b1000 *"
b1000 ,
b1000 D
b1000 Z
b1000 ]
b1000 `
b1000 c
b1000 f
b1000 o
b1000 s
b1000 w
b1000 {
b1000 !"
b1000 %"
b1000 )"
b1000 4"
#250
b101000 V
b101000 g
#251
b101000 X
b101000 ^
#252
b1000 n
b1000 q
b1000 m
b1000 u
b1000 l
b1000 y
b1000 k
b1000 }
b1000 U
b1000 p
b1000 j
b1000 #"
b1000 i
b1000 '"
1#
#256
0#
#260
1#
#264
0#
#268
1#
#272
0#
#276
1#
#280
0#
#284
1#
#288
0#
#292
1#
0H
09
#293
b110000 5
b110000 L
b110000 3
b110000 @
b110000 J
b110000 ;
b110000 A
b110000 K
b110000 ."
b101100 !
b101100 >
b101100 -"
#295
bx U
bx p
bx v
bx $"
bx z
bx ("
bx r
bx ~
bx 1
bx R
bx S
bx \
bx _
bx b
bx e
bx h
bx 3
bx @
bx J
bx00 6
bx00 ?
bx00 :"
bx B
bx 3"
bx 5"
bx 7"
bx Q
bx 9"
bx "
bx %
#296
bx -
bx 1"
bx 2"
bx <
bx E
bx [
bx /"
bx Y
bx d
b0x000 W
b0x000 a
bx1xxx V
bx1xxx g
0#
#297
bx t
bx x
bx |
bx ""
bx &"
bx *"
bx 2
bx O
bx P
bx X
bx ^
bx ,
bx D
bx Z
bx ]
bx `
bx c
bx f
bx o
bx s
bx w
bx {
bx !"
bx %"
bx )"
bx 4"
bx +
bx N
bx ,"
bx 6"
#298
bx V
bx g
bx W
bx a
bx 0
bx M
bx +"
#300
bx n
bx q
bx m
bx u
bx l
bx y
bx k
bx }
bx j
bx #"
bx i
bx '"
1#
#301
b110100 5
b110100 L
b110100 ;
b110100 A
b110100 K
b110100 ."
b110000 !
b110000 >
b110000 -"
#304
0#
#308
1#
#309
b111000 5
b111000 L
b111000 ;
b111000 A
b111000 K
b111000 ."
b110100 !
b110100 >
b110100 -"
#312
0#
#316
1#
#317
b111100 5
b111100 L
b111100 ;
b111100 A
b111100 K
b111100 ."
b111000 !
b111000 >
b111000 -"
#320
0#
#324
1#
#325
b1000000 5
b1000000 L
b1000000 ;
b1000000 A
b1000000 K
b1000000 ."
b111100 !
b111100 >
b111100 -"
#328
0#
#332
1#
#333
b1000100 5
b1000100 L
b1000100 ;
b1000100 A
b1000100 K
b1000100 ."
b1000000 !
b1000000 >
b1000000 -"
#336
0#
#340
1#
#341
b1001000 5
b1001000 L
b1001000 ;
b1001000 A
b1001000 K
b1001000 ."
b1000100 !
b1000100 >
b1000100 -"
#344
0#
#348
1#
#349
b1001100 5
b1001100 L
b1001100 ;
b1001100 A
b1001100 K
b1001100 ."
b1001000 !
b1001000 >
b1001000 -"
#352
0#
#356
1#
#357
b1010000 5
b1010000 L
b1010000 ;
b1010000 A
b1010000 K
b1010000 ."
b1001100 !
b1001100 >
b1001100 -"
#360
0#
#364
1#
#365
b1010100 5
b1010100 L
b1010100 ;
b1010100 A
b1010100 K
b1010100 ."
b1010000 !
b1010000 >
b1010000 -"
#368
0#
#372
1#
#373
b1011000 5
b1011000 L
b1011000 ;
b1011000 A
b1011000 K
b1011000 ."
b1010100 !
b1010100 >
b1010100 -"
#376
0#
#380
1#
#381
b1011100 5
b1011100 L
b1011100 ;
b1011100 A
b1011100 K
b1011100 ."
b1011000 !
b1011000 >
b1011000 -"
#384
0#
#388
1#
#389
b1100000 5
b1100000 L
b1100000 ;
b1100000 A
b1100000 K
b1100000 ."
b1011100 !
b1011100 >
b1011100 -"
#392
0#
#396
1#
#397
b1100100 5
b1100100 L
b1100100 ;
b1100100 A
b1100100 K
b1100100 ."
b1100000 !
b1100000 >
b1100000 -"
#400
0#
#404
1#
#405
b1101000 5
b1101000 L
b1101000 ;
b1101000 A
b1101000 K
b1101000 ."
b1100100 !
b1100100 >
b1100100 -"
#408
0#
#412
1#
#413
b1101100 5
b1101100 L
b1101100 ;
b1101100 A
b1101100 K
b1101100 ."
b1101000 !
b1101000 >
b1101000 -"
#416
0#
#420
1#
#421
b1110000 5
b1110000 L
b1110000 ;
b1110000 A
b1110000 K
b1110000 ."
b1101100 !
b1101100 >
b1101100 -"
#424
0#
#428
1#
#429
b1110100 5
b1110100 L
b1110100 ;
b1110100 A
b1110100 K
b1110100 ."
b1110000 !
b1110000 >
b1110000 -"
#432
0#
#436
1#
#437
b1111000 5
b1111000 L
b1111000 ;
b1111000 A
b1111000 K
b1111000 ."
b1110100 !
b1110100 >
b1110100 -"
#440
0#
#444
1#
#445
b1111100 5
b1111100 L
b1111100 ;
b1111100 A
b1111100 K
b1111100 ."
b1111000 !
b1111000 >
b1111000 -"
#448
0#
#452
1#
#453
b10000000 5
b10000000 L
b10000000 ;
b10000000 A
b10000000 K
b10000000 ."
b1111100 !
b1111100 >
b1111100 -"
#456
0#
#460
1#
#461
b10000100 5
b10000100 L
b10000100 ;
b10000100 A
b10000100 K
b10000100 ."
b10000000 !
b10000000 >
b10000000 -"
#464
0#
#468
1#
#469
b10001000 5
b10001000 L
b10001000 ;
b10001000 A
b10001000 K
b10001000 ."
b10000100 !
b10000100 >
b10000100 -"
#472
0#
#476
1#
#477
b10001100 5
b10001100 L
b10001100 ;
b10001100 A
b10001100 K
b10001100 ."
b10001000 !
b10001000 >
b10001000 -"
#480
0#
#484
1#
#485
b10010000 5
b10010000 L
b10010000 ;
b10010000 A
b10010000 K
b10010000 ."
b10001100 !
b10001100 >
b10001100 -"
#488
0#
#492
1#
#493
b10010100 5
b10010100 L
b10010100 ;
b10010100 A
b10010100 K
b10010100 ."
b10010000 !
b10010000 >
b10010000 -"
#496
0#
#500
1#
#501
b10011000 5
b10011000 L
b10011000 ;
b10011000 A
b10011000 K
b10011000 ."
b10010100 !
b10010100 >
b10010100 -"
#504
0#
#505
